
@mixin theme-font($name, $variant: default) {
  font-family: theme-font-family($name);
  font-weight: theme-font-weight($name, $variant);
  font-style: theme-font-style($name, $variant);
}

@mixin vertically-centered() {
  // vertically center
  position: relative;
  top: 50%;
  @include transform(translateY(-50%));
}

@mixin ir($image, $inline-block: false) {
  // easy mixin for image-replacement technique
  // simply set your element's width, height, background-image, and optionally - background-size and background-position (if other than center center)
  text-align: left;
  text-indent: -99999px;
  background: transparent image-url($image) no-repeat center center;
  background-size: 100%;
  @if $inline-block == true {
    display: inline-block;
  } @else {
    display: block;
  }

}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation ($stuff) {
    -webkit-animation: $stuff;
    -moz-animation: $stuff;
    -ms-animation: $stuff;
    animation: $stuff;
}

/* ----------------------------------------------------------------------- */

// Example animation:
// @include keyframes(pulse) {
//   0% {
//     background-color: theme-color(red);
//   }
//   50% {
//     background-color: theme-color(blue);
//   }
//   100% {
//     background-color: theme-color(red);
//   }
// }

@mixin resize-sprite($map, $sprite, $percent) {
  $spritePath:    sprite-path($map);
  $spriteWidth:   image-width($spritePath);
  $spriteHeight:  image-height($spritePath);
  $width: image-width(sprite-file($map, $sprite));
  $height: image-height(sprite-file($map, $sprite));

  @include background-size(ceil($spriteWidth * ($percent/100)) ceil($spriteHeight * ($percent/100)));
  width: ceil($width*($percent/100));
  height: ceil($height*($percent/100));
  background-position: 0 floor(nth(sprite-position($map, $sprite), 2)  * ($percent/100) );
}
